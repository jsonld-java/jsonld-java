{
  "@context": "http://json-ld.org/test-suite/context.jsonld",
  "@id": "",
  "@type": "jld:Manifest",
  "rdfs:comment": "JSON-LD to RDF tests generate N-Quads Output",
  "name": "toRdf",
  "baseIri": "http://json-ld.org/test-suite/tests/",
  "sequence": [
    {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "Plain literal with URIs",
      "purpose": "Tests generation of a triple using full URIs and a plain literal.",
      "input": "toRdf-0001-in.jsonld",
      "expect": "toRdf-0001-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "Plain literal with CURIE from default context",
      "purpose": "Tests generation of a triple using a CURIE defined in the default context.",
      "input": "toRdf-0002-in.jsonld",
      "expect": "toRdf-0002-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "Default subject is BNode",
      "purpose": "Tests that a BNode is created if no explicit subject is set.",
      "input": "toRdf-0003-in.jsonld",
      "expect": "toRdf-0003-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "Literal with language tag",
      "purpose": "Tests that a plain literal is created with a language tag.",
      "input": "toRdf-0004-in.jsonld",
      "expect": "toRdf-0004-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "Extended character set literal",
      "purpose": "Tests that a literal may be created using extended characters.",
      "input": "toRdf-0005-in.jsonld",
      "expect": "toRdf-0005-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "Typed literal",
      "purpose": "Tests creation of a literal with a datatype.",
      "input": "toRdf-0006-in.jsonld",
      "expect": "toRdf-0006-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "Tests 'a' generates rdf:type and object is implicit IRI",
      "purpose": "Verify that 'a' is an alias for rdf:type, and the object is created as an IRI.",
      "input": "toRdf-0007-in.jsonld",
      "expect": "toRdf-0007-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "Test prefix defined in @context",
      "purpose": "Generate an IRI using a prefix defined within an @context.",
      "input": "toRdf-0008-in.jsonld",
      "expect": "toRdf-0008-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "Test using an empty suffix",
      "purpose": "An empty suffix may be used.",
      "input": "toRdf-0009-in.jsonld",
      "expect": "toRdf-0009-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "Test object processing defines object",
      "purpose": "A property referencing an associative array gets object from subject of array.",
      "input": "toRdf-0010-in.jsonld",
      "expect": "toRdf-0010-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "Test object processing defines object with implicit BNode",
      "purpose": "If no @ is specified, a BNode is created, and will be used as the object of an enclosing property.",
      "input": "toRdf-0011-in.jsonld",
      "expect": "toRdf-0011-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "Multiple Objects for a Single Property",
      "purpose": "Tests that Multiple Objects are for a Single Property using array syntax.",
      "input": "toRdf-0012-in.jsonld",
      "expect": "toRdf-0012-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "Creation of an empty list",
      "purpose": "Tests that [[]] generates an empty list.",
      "input": "toRdf-0013-in.jsonld",
      "expect": "toRdf-0013-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "Creation of a list with single element",
      "purpose": "Tests that [[a]] generates list.",
      "input": "toRdf-0014-in.jsonld",
      "expect": "toRdf-0014-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "Creation of a list with multiple elements",
      "purpose": "Tests that list with multiple elements.",
      "input": "toRdf-0015-in.jsonld",
      "expect": "toRdf-0015-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "Empty IRI expands to resource location",
      "purpose": "Expanding an empty IRI uses the test file location.",
      "input": "toRdf-0016-in.jsonld",
      "expect": "toRdf-0016-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "Relative IRI expands relative resource location",
      "purpose": "Expanding a relative IRI uses the test file location.",
      "input": "toRdf-0017-in.jsonld",
      "expect": "toRdf-0017-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "Frag ID expands relative resource location",
      "purpose": "Expanding a fragment uses the test file location.",
      "input": "toRdf-0018-in.jsonld",
      "expect": "toRdf-0018-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "Test type coercion to anyURI",
      "purpose": "Tests coercion of object to anyURI when specified.",
      "input": "toRdf-0019-in.jsonld",
      "expect": "toRdf-0019-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "Test type coercion to typed literal",
      "purpose": "Tests coercion of object to a typed literal when specified.",
      "input": "toRdf-0020-in.jsonld",
      "expect": "toRdf-0020-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "Test coercion of decimal value to double",
      "purpose": "Tests that a decimal value generates a xsd:double typed literal.",
      "input": "toRdf-0021-in.jsonld",
      "expect": "toRdf-0021-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "Test coercion of double value",
      "purpose": "Tests that a decimal value generates a xsd:double typed literal;.",
      "input": "toRdf-0022-in.jsonld",
      "expect": "toRdf-0022-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "Test coercion of integer value",
      "purpose": "Tests that a decimal value generates a xsd:integer typed literal.",
      "input": "toRdf-0023-in.jsonld",
      "expect": "toRdf-0023-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "Test coercion of boolean value",
      "purpose": "Tests that a decimal value generates a xsd:boolean typed literal.",
      "input": "toRdf-0024-in.jsonld",
      "expect": "toRdf-0024-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "Test list coercion with single element",
      "purpose": "Tests that an array with a single element on a property with @list coercion creates an RDF Collection.",
      "input": "toRdf-0025-in.jsonld",
      "expect": "toRdf-0025-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "Test creation of multiple types",
      "purpose": "Tests that @type with an array of types creates multiple types.",
      "input": "toRdf-0026-in.jsonld",
      "expect": "toRdf-0026-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "Simple named graph (Wikidata)",
      "purpose": "Using @graph with other keys places triples in a named graph.",
      "input": "toRdf-0027-in.jsonld",
      "expect": "toRdf-0027-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "Simple named graph",
      "purpose": "Signing a graph.",
      "input": "toRdf-0028-in.jsonld",
      "expect": "toRdf-0028-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "named graph with embedded named graph",
      "purpose": "Tests that named graphs containing named graphs flatten to single level of graph naming.",
      "input": "toRdf-0029-in.jsonld",
      "expect": "toRdf-0029-out.nq"
    }, {
      "@type": ["test:TestCase", "jld:ToRDFTest"],
      "name": "top-level graph with string subject reference",
      "purpose": "Tests graphs containing subject references as strings.",
      "input": "toRdf-0030-in.jsonld",
      "expect": "toRdf-0030-out.nq"
    }
  ]
}
